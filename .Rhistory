install.packages("rPython")
install.packages("shiny")
install.packages("DT")
python.load("filter_jeff.py")
library(rPython)
install.packages("rPython")
install.packages("rPython")
install.packages("rPython")
install.packages("python-devel")
install.packages("rPython")
library(rPython)
install.packages("rPython")
install.packages("rPython")
library(rPython)
install.packages("RJSONIO")
library(rPython)
library(RJSONIO)
library(rPython)
python.load("filter_jeff.py")
python.load("/home/cornelis/Downloads/filter_jeff.py")
library(RJSONIO)
library(rPython)
python.load("/home/cornelis/Downloads/filter_jeff.py")
library(RJSONIO)
library(rPython)
python.load("/home/cornelis/PycharmProjects/TestProject.py")
python.load("/home/cornelis/PycharmProjects/TestProject/TestScript.py")
library(RJSONIO)
library(rPython)
python.load("/home/cornelis/PycharmProjects/TestProject/TestScript.py")
library(RJSONIO)
library(rPython)
python.load("/home/cornelis/PycharmProjects/TestProject/TestScript.py")
rawFile
python.load("/home/cornelis/PycharmProjects/TestProject/TestScript.py")
python.load("/home/cornelis/PycharmProjects/TestProject/TestScript.py")
python.load("/home/cornelis/PycharmProjects/TestProject/TestScript.py")
x<-python.load("/home/cornelis/PycharmProjects/TestProject/TestScript.py")
x
python.load("/home/cornelis/PycharmProjects/TestProject/TestScript.py")
python.load("/home/cornelis/PycharmProjects/TestProject/TestScript.py")
python.call("get_frames",locTest,256,256)
locTest <-"/home/cornelis/Downloads/M1302000139_1442697993.722772.raw"
python.call("get_frames",locTest,256,256)
x<-python.call("get_frames",locTest,256,256)
x
rm(list = ls())
library(RJSONIO)
library(rPython)
python.call("get_frames",locTest,256,256)
locTest <-"/home/cornelis/Downloads/M1302000139_1442697993.722772.raw"
python.call("get_frames",locTest,256,256)
library(RJSONIO)
library(rPython)
locTest <-"/home/cornelis/Downloads/M1302000139_1442697993.722772.raw"
python.call("get_frames",locTest,256,256)
x<-python.get("get_frames",locTest,256,256)
python.get("get_frames",locTest,256,256)
python.get('frames[0]')
rm(list = ls())
library(RJSONIO)
library(rPython)
python.load("/home/cornelis/PycharmProjects/TestProject/TestScript.py")
python.get('frames[0]')
install.packages("matlab")
library(matlab)
imagesc(python.get('frames[0]'))
values <- matrix(c(seq(1,  5, by=1),
seq(2, 10, by=2),
seq(3, 15, by=3)), nrow=3, byrow=TRUE)
values
imagesc(values, xlab="cols", ylab="rows", col=jet.colors(16))
imagesc(values, xlab="cols", ylab="rows", col=jet.colors(16))
python.get('frames[0]')
class(python.get('frames[0]'))
as.matrix(python.get('frames[0]'))
python.get('frames[0]')
matrix(c(seq(1,  5, by=1),
seq(2, 10, by=2),
seq(3, 15, by=3)), nrow=3, byrow=TRUE)
imagesc(as.matrix(python.get('frames[0]')))
python.get('frames[0]')
as.matrix(python.get('frames[0]'))
as.matrix(python.get('frames[0]'))[1]
as.matrix(python.get('frames[0]'))[[1]]
imagesc(as.matrix(python.get('frames[0]'))[[1]])
class(as.matrix(python.get('frames[0]'))[[1]])
class(matrix(python.get('frames[0]'))[[1]])
matrix(python.get('frames[0]'))[[1]]
matrix(python.get('frames[0]')[[1]])
imagesc(matrix(python.get('frames[0]')[[1]]))
matrix(python.get('frames[0]')[[1]])
imagesc(matrix(python.get('frames[0]')[[1]]))
values
imagesc(matrix(python.get('frames[0]')[[1]]),xlab="cols", ylab="rows", col=jet.colors(16))
imagesc(values)
as.data.frame(values)
imagesc(as.data.frame(values))
rm(list = ls())
library(RJSONIO)
library(rPython)
library(matlab)
python.load("/home/cornelis/PycharmProjects/TestProject/TestScript.py")
imagesc(python.get('frames[0]'))
python.load("/home/cornelis/PycharmProjects/TestProject/TestScript.py")
python.get('frames[0]')
FirstFrame<-python.get('frames[0]')
FirstFrame
FirstFrame[0]
FirstFrame[[0]]
FirstFrame
FirstFrame[[1]]
FirstFrame[1]
FirstFrame[1][1]
FirstFrame[1][2]
FirstFrame[1]
FirstFrame[1]
FirstFrame[1][1]
FirstFrame[1][[1]]
firstFrame_raw<-python.get('frames[0]')
firstFrame_processed<-c(NULL)
for(i in firstFrame_raw){
firstFrame_processed<-append(firstFrame_processed,i[[1]])
}
firstFrame_processed
firstFrame_raw
firstFrame_raw[1]
firstFrame_raw[2]
firstFrame_raw[3]
firstFrame_raw[4]
firstFrame_raw[5]
firstFrame_processed<-c(NULL)
for(i in firstFrame_raw){
browser()
firstFrame_processed<-append(firstFrame_processed,i[[1]])
}
i
i[[1]]
firstFrame_raw[1]
firstFrame_raw<-python.get('frames[0]')
firstFrame_processed<-c(NULL)
for(i in firstFrame_raw){
firstFrame_processed<-append(firstFrame_processed,i)
}
firstFrame_raw<-python.get('frames[0]')
firstFrame_processed<-c(NULL)
for(i in firstFrame_raw){
firstFrame_processed<-append(firstFrame_processed,i)
}
firstFrame_processed
firstFrame_processed[1]
firstFrame_processed[2]
firstFrame_processed[3]
firstFrame_processed[4]
matrix(c(seq(1,  5, by=1),
seq(2, 10, by=2),
seq(3, 15, by=3)), nrow=3, byrow=TRUE)
length(firstFrame_raw)
length(firstFrame_raw[1])
length(firstFrame_raw[[1]])
zeros(1)
zeros(10.10)
zeros(5.10)
zeros(5.10)
zeros(5,10)
zeros(firstFrame_raw,length(firstFrame_raw[[1]]))
length(firstFrame_raw)
ength(firstFrame_raw[[1]])
length(firstFrame_raw[[1]])
zeros(length(firstFrame_raw),length(firstFrame_raw[[1]]))
firstFrame_processed<-zeros(length(firstFrame_raw),length(firstFrame_raw[[1]]))
firstFrame_processed[1][1]
firstFrame_processed[1,1]
firstFrame_processed[1,]
firstFrame_processed[,1]
firstFrame_processed[1,]<-firstFrame_raw[[1]]
firstFrame_processed
firstFrame_processed[1,]
1:length(firstFrame_processed)
length(firstFrame_processed)
length(firstFrame_raw)
firstFrame_raw<-python.get('frames[0]')
firstFrame_processed<-zeros(length(firstFrame_raw),length(firstFrame_raw[[1]]))
for(i in 1:length(firstFrame_raw)){
firstFrame_processed[i,]<-firstFrame_raw[[i]]
}
firstFrame_processed
imagesc(firstFrame_processed)
shiny::runApp('Documents/R Shiny/BrainImageAnalyzer')
shiny::runApp('Documents/R Shiny/BrainImageAnalyzer')
shiny::runApp('Documents/R Shiny/BrainImageAnalyzer')
install.packages('devtools')
q()
devtools::install_github('rstudio/rsconnect')
install.packages('devtools')
devtools::install_github('rstudio/rsconnect')
install.packages('devtools')
install.packages("xml2")
install.packages('devtools')
install.packages("curl")
install.packages('devtools')
q()
shiny::runApp('Documents/R Shiny/BrainImageAnalyzer')
shiny::runApp('Documents/R Shiny/BrainImageAnalyzer')
rsconnect::showLogs()
rsconnect::showLogs()
rsconnect::showLogs("/home/cornelis/Documents/R Shiny/BrainImageAnalyzer")
shiny::runApp('Documents/R Shiny/BrainImageAnalyzer')
shiny::runApp('Documents/R Shiny/BrainImageAnalyzer')
shiny::runApp('Documents/R Shiny/BrainImageAnalyzer')
rm(list = ls())
library(RJSONIO)
library(rPython)
python.load("/home/cornelis/PycharmProjects/TestProject/TestScript.py")
firstFrame_raw<-python.call("get_frames","/home/cornelis/Downloads/M1302000139_1442697993.722772.raw",256,256)
firstFrame_raw
library(RJSONIO)
library(rPython)
python.load("/home/cornelis/PycharmProjects/TestProject/TestScript.py")
firstFrame_raw<-python.call("get_frames","/home/cornelis/Downloads/M1302000139_1442697993.722772.raw",256,256)
firstFrame_raw
shiny::runApp('Documents/R Shiny/mouseActionGrapher')
shiny::runApp('Documents/R Shiny/mouseActionGrapher')
shiny::runApp('Documents/R Shiny/mouseActionGrapher')
install.packages("leaflet")
shiny::runApp('Documents/R Shiny/mouseActionGrapher')
shiny::runApp('Documents/R Shiny/mouseActionGrapher')
shiny::runApp('Documents/R Shiny/mouseActionGrapher')
shiny::runApp('Documents/R Shiny/mouseActionGrapher')
input$FOLDERS_TO_IGNORE
shiny::runApp('Documents/R Shiny/mouseActionGrapher')
shiny::runApp('Documents/R Shiny/mouseActionGrapher')
shiny::runApp('Documents/R Shiny/mouseActionGrapher')
shiny::runApp('Documents/R Shiny/mouseActionGrapher')
shiny::runApp('Documents/R Shiny/mouseActionGrapher')
shiny::runApp('Documents/R Shiny/mouseActionGrapher')
shiny::runApp('Documents/R Shiny/mouseActionGrapher')
shiny::runApp('Documents/R Shiny/mouseActionGrapher')
shiny::runApp('Documents/R Shiny/mouseActionGrapher')
shiny::runApp('Documents/R Shiny/mouseActionGrapher')
shiny::runApp('Documents/R Shiny/mouseActionGrapher')
shiny::runApp('Documents/R Shiny/mouseActionGrapher')
shiny::runApp('Documents/R Shiny/mouseActionGrapher')
shiny::runApp('Documents/R Shiny/mouseActionGrapher')
is.null(input$subsettingTable_rows_all)
is.null(input$subsettingTable_rows_all)
input$subsettingTable_rows_all
subsetToPlot()
ACTION_COL
subsetToPlot()[[ACTION_COL]]
unique(subsetToPlot()[[ACTION_COL]])
shiny::runApp('Documents/R Shiny/mouseActionGrapher')
subsetToPlot()[[ACTION_COL]]
unique(subsetToPlot()[[ACTION_COL]])
list(unique(subsetToPlot()[[ACTION_COL]]))
class(unique(subsetToPlot()[[ACTION_COL]]))
as.list(unique(subsetToPlot()[[ACTION_COL]]))
(unique(subsetToPlot()[[ACTION_COL]]))
levels(unique(subsetToPlot()[[ACTION_COL]]))
subsetToPlot()[[ACTION_COL]]
shiny::runApp('Documents/R Shiny/mouseActionGrapher')
levels(subsetToPlot()[[ACTION_COL]])
shiny::runApp('Documents/R Shiny/mouseActionGrapher')
shiny::runApp('Documents/R Shiny/mouseActionGrapher')
subsetTable[,ACTION_COL]
subsetTable[3,ACTION_COL]
subsetTable[3,ACTION_COL]=='entry'
shiny::runApp('Documents/R Shiny/mouseActionGrapher')
subsetTable[subsetTable[,ACTION_COL]==input$firstAction|subsetTable[,ACTION_COL]==input$secondAction,]
subsetTable[,ACTION_COL]==input$firstAction
subsetTable[,ACTION_COL]==input$secondAction
subsetTable[,ACTION_COL]
input$firstAction
input$firstAction
shiny::runApp('Documents/R Shiny/mouseActionGrapher')
shiny::runApp('Documents/R Shiny/mouseActionGrapher')
shiny::runApp('Documents/R Shiny/mouseActionGrapher')
subsetTable
input$goButton
input$goButton==0
shiny::runApp('Documents/R Shiny/mouseActionGrapher')
NULL
input$goButton
input$goButton[1]
input$goButton[1]==0
shiny::runApp('Documents/R Shiny/mouseActionGrapher')
subsetTable_times
shiny::runApp('Documents/R Shiny/mouseActionGrapher')
input$goButton
input$goButton==0
shiny::runApp('Documents/R Shiny/mouseActionGrapher')
shiny::runApp('Documents/R Shiny/mouseActionGrapher')
input$goButton
shiny::runApp('Documents/R Shiny/mouseActionGrapher')
subsetTable_times
shiny::runApp('Documents/R Shiny/mouseActionGrapher')
shiny::runApp('Documents/R Shiny/mouseActionGrapher')
